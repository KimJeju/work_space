type NickName = string
type HealthBar = number

type Player = {
    nickname:NickName,
    healthBar:HealthBar
}

const aa:Player = {
    nickname : "aa",
    healthBar : 10
}


type Food = string;

const kimchi:Food = "good"

type Team = "red" | "blue" | "yello"
type Health = 1 | 5 | 10

interface Player  {
    nickname:string,
    team:Team
    health : Health
}

const p :Player = {
    nickname:"asd",
    team:"red",
    health : 1
}

interface User {
    name : string
}

interface Player extends User {

}

const aa : Player = {
    name : "asd"
}


//////////////////

interface User {
    firstName:string,
    lastName:string ,

    sayHi(name:string):string
    fullName():string    
}

interface Human {
    health:number
}

class Player implements User, Human {
    constructor(
        public firstName:string,
        public lastName:string,
        public health:number
    ){}

    sayHi(name:string){
        return `${name}`
    }

    fullName(){
        return `${this.firstName} ${this.lastName}`
    }
}

function makeUser(user:User){}

function makeUserReturnUser(user:User):User{
    return({
        firstName:"aaa",
        lastName:"bbb",
        sayHi : (name) => "xxx",
        fullName : () => "string"
    })
}


makeUser({
    firstName:"aaa",
    lastName:"bbb",
    sayHi : (name) => "xxx",
    fullName : () => "string"
})
